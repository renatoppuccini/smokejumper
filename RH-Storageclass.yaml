apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: rhibox-fc
  annotations:
     storageclass.kubernetes.io/is-default-class: "true"
provisioner: infinibox-csi-driver
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
  csi.storage.k8s.io/controller-expand-secret-name: infinibox-creds
  csi.storage.k8s.io/controller-expand-secret-namespace: infinidat-csi
  csi.storage.k8s.io/controller-publish-secret-name: infinibox-creds
  csi.storage.k8s.io/controller-publish-secret-namespace: infinidat-csi
  csi.storage.k8s.io/node-publish-secret-name: infinibox-creds
  csi.storage.k8s.io/node-publish-secret-namespace: infinidat-csi
  csi.storage.k8s.io/node-stage-secret-name: infinibox-creds
  csi.storage.k8s.io/node-stage-secret-namespace: infinidat-csi
  csi.storage.k8s.io/provisioner-secret-name: infinibox-creds
  csi.storage.k8s.io/provisioner-secret-namespace: infinidat-csi
  csi.storage.k8s.io/node-expand-secret-name: infinibox-creds
  csi.storage.k8s.io/node-expand-secret-namespace: infinidat-csi
  csi.storage.k8s.io/fstype: xfs

  # InfiniBox configuration
  pool_name: "openshiftcdl"
  storage_protocol: "fc"

  # optional parameters
  #max_vols_per_host: "100"
  #provision_type: "THIN"
  #ssd_enabled: "false"
  #uid: "3000" # UID of volume
  #gid: "3000" # GID of volume
  #unix_permissions: "777" # optional volume mount permissions
